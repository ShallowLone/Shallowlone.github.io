{
    "version": "https://jsonfeed.org/version/1",
    "title": "落花繁星 星奔川騖",
    "description": "Time like these",
    "home_page_url": "http://yoursite.com",
    "items": [
        {
            "id": "http://yoursite.com/2022/11/08/Hexo-Blog-1/",
            "url": "http://yoursite.com/2022/11/08/Hexo-Blog-1/",
            "title": "Hexo-Blog 第一期",
            "date_published": "2022-11-08T07:40:48.000Z",
            "content_html": "<center>Hexo-Blog 第一期-初始化(纯新人教学向)</center>\n<p>如今越来越多的人想搭建属于自己的 Blog 了 (虽然这年头都是直接发微博，小红书，QQ 空间的 = =, 但是个人自己抡个个人页面比较有意思，以后也可以当简历一部份的 (对于计算机专业来讲)), 这里给各位推荐使用 Hexo 来搭建个人的 Blog (中途可能要掏一笔域名钱，其他几乎免费), 前面也有一篇 Wordpress 的文章，看个人所需.(本文尽可能图文并茂)</p>\n<p>另外，你也可以部署到服务器 (国内先完成备案，部署到香港服务器就不用), 后面可能出一期教程</p>\n<p>本文服务对象：Windows 用户和 Macos 用户</p>\n<p>如有问题，请私信 Email~, 首页有邮箱</p>\n<h2 id=\"前提必备环境\"><a class=\"markdownIt-Anchor\" href=\"#前提必备环境\">#</a> 前提必备环境:</h2>\n<ul>\n<li>\n<p>电脑起码要有个能编辑代码的工具吧：Visual Studio Code/Sublime Text (个人推荐 VSC, 插件嘎嘎猛), 这里顺带多推荐个 Markdown 付费软件:<span class=\"exturl\" data-url=\"aHR0cHM6Ly90eXBvcmFpby5jbi8=\">Typora(typoraio.cn)</span>, 后续自己写 markdown 文件看的很直观</p>\n</li>\n<li>\n<p>能打开 Windows 的 CMD 和 Mac 的 Terminal</p>\n</li>\n<li>\n<p>安装 Git,Node.js (Mac 这里要首先先用 Terminal 下载 Homebrew 以及 Command line),Hexo:</p>\n<ol>\n<li>\n<p>Homebrew: 请打开 mac 的终端 Terminal 下载，复制下面代码就行:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/bin/bash -c <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure>\n<p>Mac 用户顺带下载个 Command Tools:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xcode-select --install</span><br></pre></td></tr></table></figure>\n<p>Windows 也可以用 chocolatey:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaG9jb2xhdGV5Lm9yZy9pbnN0YWxs\">Chocolatey</span></p>\n</li>\n<li>\n<p>Git:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQtc2NtLmNvbS8=\">Git (git-scm.com)</span></p>\n<p>Mac 的 Git 请用 Homebrew 下载:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install git</span><br></pre></td></tr></table></figure>\n<p>Windows 直接下载安装包就行</p>\n</li>\n<li>\n<p>Node.js:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2RlanMub3JnL2VuLw==\">Node.js (nodejs.org)</span> 直接装 Stable 版本就行 Node.js 内置 npm</p>\n</li>\n<li>\n<p>都装完了，打几条指令先检查下版本啥的～Mac 用户用 Terminal Windows 用 CMD</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br><span class=\"line\">git -version</span><br><span class=\"line\">npm -v</span><br><span class=\"line\">cnpm -v <span class=\"comment\">##装了cnpm的可以查</span></span><br></pre></td></tr></table></figure>\n<p>如果等下 Npm 下载慢的话，下载个淘宝的 cnpm (LMAO)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n<p>Hexo 安装:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br><span class=\"line\">cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo -v <span class=\"comment\">#看版本</span></span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"初始化initialize\"><a class=\"markdownIt-Anchor\" href=\"#初始化initialize\">#</a> 初始化 (Initialize)</h2>\n<p>在 Cmd/Tml 中运行操作</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init myblog <span class=\"comment\">#Myblog可以换个名字 不过建议名字短点较好</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> myblog <span class=\"comment\">#进入文件夹</span></span><br><span class=\"line\">npm install 给文件夹也装个npm</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://shallowlone-1314146925.cos.ap-guangzhou.myqcloud.com/picpic20221108162038.png\" alt></p>\n<p>上面就有这些玩意就差不多初始化完成咯</p>\n<p>可以先启动下试试看捏:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>\n<p>启动后可以访问你的 http://localhost:4000/, 正常显示后你的 Hexo 就搭建初步完成一部份了，好耶～</p>\n<p>停止访问的时候按 Ctrl+C Contral, 不是 Command</p>\n<p><img data-src=\"https://shallowlone-1314146925.cos.ap-guangzhou.myqcloud.com/pic20221108162705.png\" alt></p>\n<p>下一期内容：使用 Shoka 主题 / 部署 Github 上</p>\n",
            "tags": [
                "blog"
            ]
        },
        {
            "id": "http://yoursite.com/2022/11/05/random/",
            "url": "http://yoursite.com/2022/11/05/random/",
            "title": "Random Number,Simulation and Random Walk",
            "date_published": "2022-11-05T06:45:00.000Z",
            "content_html": "<p>随机数，仿真，Random Walk 的杂谈</p>\n<p>最近在学习随机数的相关内容，刚好又在学 python, 故浅浅记录下相关知识</p>\n<p>[TOC]</p>\n<hr>\n<h2 id=\"随机数的定义\"><a class=\"markdownIt-Anchor\" href=\"#随机数的定义\">#</a> 随机数的定义:</h2>\n<p>密码学以外的范畴</p>\n<p>随机数是专门的随机实验的结果</p>\n<p>在统计学不同技术中需要使用，并且产生方式有多种 (该类方式称为随机数发生器)</p>\n<p>随机数特效：随机性 不可预测性 不可重现性</p>\n<ul>\n<li>随机性：不存在统计学偏差，是完全杂乱的数列</li>\n<li>不可预测性：不能从过去的数列推测出下一个出现的数</li>\n<li>不可重现性：除非将数列本身保存下来，否则不能重现相同的数列</li>\n</ul>\n<p>密码学中，有三大标准:</p>\n<ol>\n<li>统计学伪随机性。统计学伪随机性指的是在给定的随机比特流样本中，1 的数量大致等于 0 的数量，同理，“10”“01”“00”“11” 四者数量大致相等。类似的标准被称为统计学随机性。满足这类要求的数字在人类 “一眼看上去” 是随机的。</li>\n<li>密码学安全伪随机性。其定义为，给定随机样本的一部分和随机算法，不能有效的演算出随机样本的剩馀部分。</li>\n<li>真随机性。其定义为随机样本不可重现。实际上只要给定边界条件，真随机数并不存在，可是如果产生一个真随机数样本的边界条件十分复杂且难以捕捉（比如当地的本底辐射波动值），可以认为用这个方法演算出来了真随机数。但实际上，这也只是非常接近真随机数的伪随机数，一般认为，无论是本底辐射、物理噪音、抛硬币等等都是可被观察了解的，任何基于经典力学产生的随机数，都只是伪随机数。</li>\n</ol>\n<p>从目前角度来看，目前不存在真随机数，平时用的验证码随机性也只是伪随机数.</p>\n<h3 id=\"应用角度\"><a class=\"markdownIt-Anchor\" href=\"#应用角度\">#</a> 应用角度:</h3>\n<p>真正的随机数是使用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTclODklQTklRTclOTAlODYlRTclOEUlQjAlRTglQjElQTE/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">物理现象</span>产生的：比如掷钱币、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTklQUElQjAlRTUlQUQlOTA/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">骰子</span>、转轮、使用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTclOTQlQjUlRTUlQUQlOTAlRTUlODUlODMlRTQlQkIlQjY/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">电子元件</span>的噪音、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlQTAlQjglRTglQTMlODIlRTUlOEYlOTg/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">核裂变</span>等等，这样的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTklOUElOEYlRTYlOUMlQkElRTYlOTUlQjAlRTUlOEYlOTElRTclOTQlOUYlRTUlOTklQTgvMTYwNTUwMTg/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">随机数发生器</span>叫做物理性随机数发生器，它们的缺点是技术要求比较高。</p>\n<p>使用计算机产生真随机数的方法是获取 cpu 频率与温度的不确定性以及统计一段时间的运算次数每次都会产生不同的值，系统时间的误差以及声卡的底噪等。</p>\n<p>在实际应用中往往使用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTQlQkMlQUElRTklOUElOEYlRTYlOUMlQkElRTYlOTUlQjA/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">伪随机数</span>就足够了。这些<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlOTUlQjAlRTUlODglOTc/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">数列</span>是 “似乎” 随机的数，实际上它们是通过一个固定的、可以重复的计算方法产生的。计算机或计算器产生的随机数有很长的周期性。它们不真正地随机，因为它们实际上是可以计算出来的，但是它们具有类似于随机数的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTclQkIlOUYlRTglQUUlQTElRTclODklQjklRTUlQkUlODE/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">统计特征</span>。这样的发生器叫做<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTQlQkMlQUElRTklOUElOEYlRTYlOUMlQkElRTYlOTUlQjAlRTUlOEYlOTElRTclOTQlOUYlRTUlOTklQTg/ZnJvbU1vZHVsZT1sZW1tYV9pbmxpbms=\">伪随机数发生器</span>。</p>\n<h4 id=\"如何生成伪随机数\"><a class=\"markdownIt-Anchor\" href=\"#如何生成伪随机数\">#</a> 如何生成伪随机数:</h4>\n<p>最基础的线性同余法使用下面的递归公式来生成随机数列：</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>X</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mo stretchy=\"false\">(</mo><mi>a</mi><msub><mi>X</mi><mi>n</mi></msub><mo>+</mo><mi>c</mi><mo stretchy=\"false\">)</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">X_{n+1}=(aX_{n}+c) mod m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.891661em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">m</span></span></span></span></p>\n<p>其中 a、c、m 是三个设定的常数。用 a 乘以上一个随机数，与 c 相加，最后与 m 求余，从而得到下一个随机数。在算第一个随机数时，上一个随机数还不存在，需要指定一个数字，这个数字被称为种子数字（seed）。</p>\n<p>线性同余法的周期（也就是出现两个相同随机数的间隔）最大为 m，因为任何数与 m 取余的结果都是一个位于 0 与 m - 1 之间的数字，最多递归到第 m 次必然出现与前面出现数字重叠的现象。而通过这个算法也可以看到，只要出现一个重复的数字，后面出现的所有数字序列与前面出现的序列都是重叠的。而大部分情况下线性同余法的周期都会小于 m。要令线性同余法达到最大周期 m，a、c 以及 m 三个常数数值还应符合以下条件：</p>\n<ul>\n<li>c 与 m 互质</li>\n<li>m 的所有质因数都能整除 a - 1</li>\n<li>若 m 是 4 的倍数，则 a - 1 也是</li>\n<li>a、c、以及种子数字都比 m 小</li>\n<li>a、c 是正整数</li>\n</ul>\n<h4 id=\"如何生成真随机数\"><a class=\"markdownIt-Anchor\" href=\"#如何生成真随机数\">#</a> 如何生成真随机数:</h4>\n<p>要在计算机里生成真随机数，除了算法方面还需要借助一些特殊的硬件在算法中加入其它一些随机因子。这些随机因子可以是用户键盘或鼠标相关的随机操作数据，也可以是环境噪音、计算机本身热噪声、宇宙射线、放射性同位素衰变数据等任何在物理层面产生的随机数据。</p>\n<p>现在某些计算机 CPU 里可以通过放大电路的热噪声并以此为因子来产生真随机数。我们知道温度高于绝对零度的原子都存在热运动，在集成电路里这些原子的热运动会在电路里产生噪声，噪声会使得电路中的电压存在微小的起伏，而这些起伏变化是可以视为随机的。这种 CPU 正是通过获取这些变化的随机数据并以此来生成真随机数。</p>\n<p>但这种真随机数也有明显的缺点，那就是生成的速度比我们上面提到的伪随机数会慢很多。通常这种真随机数只被用在一些对安全级别要求较高的场景中，如使用随机密钥进行数据加密时，用来提高加密过程的不可预测性，增加破解难度。</p>\n<hr>\n<h2 id=\"关于随机漫步random-walk\"><a class=\"markdownIt-Anchor\" href=\"#关于随机漫步random-walk\">#</a> 关于随机漫步 (Random Walk)</h2>\n<ul>\n<li>\n<p>随机漫步是一种数学统计模型，由一系列轨迹所组成，每一次都是随机的，可用来表示不规则的变动形式.</p>\n</li>\n<li>\n<p>可以在各种空间上进行：圆，整数或实数线，向量空间，曲面，高纬的黎曼流形等.</p>\n</li>\n<li>\n<p>在最简单的情况下，时间是离散的，路径可以是一个由自然数索引的随机变量序列，但是也可以定义在随机时间采取步骤的随机游走 (t ∈ [0,+∞))</p>\n</li>\n</ul>\n<p>通常情况下，可以假设随机游走以马尔可夫链或马可夫过程的形式出现，但是比较复杂的 RW 不一定有这种情况，会出现特殊的模式：布朗运动，醉汉走路，莱维飞行.</p>\n<p>可以用于模拟分子在液体 / 气体中的传播路径，觅食动物的路径，股票价格的曲线和赌徒的经济情况.</p>\n<h3 id=\"一维随机游走\"><a class=\"markdownIt-Anchor\" href=\"#一维随机游走\">#</a> 一维随机游走</h3>\n<p>一个简单的随机游走的例子是在整数 {\\displaystyle \\mathbb {Z} }<img data-src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/449494a083e0a1fda2b61c62b2f09b6bee4633dc\" alt=\"\\mathbb Z\"> 轴上的随机游走。它从 0 开始，然后每一步以相同的概率移动 + 1 或−1。实际操作如下：我们首先在 0 的位置放上一个标记，然后掷一枚公平硬币。若头朝上，则将标记向右移动一个单位；反之将标记向左移动一个单位。 五次翻转后，标记现在可能在 1,-1,3,-3,5 或 - 5 的位置。 若五个翻转中得到三个头和两个尾，不管任何顺序，标记都会落在 1。一共有 10 种方式落在 1（三个头和两个尾），10 种方式落在 - 1（三个尾和两个头），5 种方式落在 3（4 个头和 1 个尾），5 种方式落在 - 3（4 个尾和 1 个头），1 种方式 5（5 个头） ，以及一种方式落在 - 5（五个尾)。</p>\n<p>如果随机游走永不停止，那么它会穿过边界线多少次？{\\displaystyle \\mathbb {Z} }<img data-src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/449494a083e0a1fda2b61c62b2f09b6bee4633dc\" alt=\"\\mathbb Z\"> 上的简单随机游走将会无限次走过每一个点。这个结果被称为<em>平交道现象（level-crossing phenomenon）</em>, <em>重现（recurrence）<em>或</em><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU4JUI1JThDJUU1JUJFJTkyJUU3JUEwJUI0JUU0JUJBJUE3JUU3JTkwJTg2JUU4JUFFJUJB\">赌徒破产理论</span></em>。最后一个名字的来历如下：若一个拥有有限财富的赌徒和一家拥有无限金钱的银行玩 “公平游戏”，最终赌徒一定会输掉。 赌徒的钱的数量将经过随机游走的过程，并且在某个时刻达到零，游戏结束。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU0JUI4JUFEJUU1JUJGJTgzJUU2JTlFJTgxJUU5JTk5JTkwJUU1JUFFJTlBJUU3JTkwJTg2\">中心极限定理</span>和<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU5JTg3JThEJUU1JUFGJUI5JUU2JTk1JUIwJUU1JUJFJThC\">重对数律</span>描述了 {\\displaystyle \\mathbb {Z} }<img data-src=\"https://wikimedia.org/api/rest_v1/media/math/render/svg/449494a083e0a1fda2b61c62b2f09b6bee4633dc\" alt=\"\\mathbb Z\"> 上的简单随机漫步。前者意味着随着 “n” 的增加，概率分布（与每行中的数字成比例）接近<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU2JUFEJUEzJUU2JTgwJTgxJUU1JTg4JTg2JUU1JUI4JTgz\">正态分布</span>。</p>\n<p>这样的理论可以直接推广到晶格上的随机漫步，它是有限图上的无限折叠阿贝尔覆盖图。在这样的情境中，我们可以设立中心极限定理和大偏差定理。</p>\n<hr>\n<h2 id=\"关于蒙特卡罗仿真参考文章\"><a class=\"markdownIt-Anchor\" href=\"#关于蒙特卡罗仿真参考文章\">#</a> 关于蒙特卡罗仿真 (参考文章)</h2>\n<p>仿真（Simulation）：在分析一个系统时，可先构造一个与该系统相似的模型，通过在模型上进行计算机仿真实验来研究原模型，这就是仿真，文献中也常称为模拟。 事实上对于电子信息科学领域来说，模拟有另外一个意思即模拟电路数字电路的模拟，此模拟（analog）非彼模拟（simulation），不过这个很容易通过上下文来分辨。 顺便提一下，台湾地区把 analog circuit 翻译成类比电路（源于 analogy 的类比之意吧），初次看到可能会觉得不知所云，不过名字有时候只是一个名字。 以下叙述中，不做区分有时候用模拟有时候用仿真（虽然两者的使用场合会有细微的区别）。</p>\n<p>如果待仿真的对象系统是随机（stochastic）系统，可以用概率模型来描述系统中的随机性并进行仿真实验，称为随机仿真（stochastic simulation）。 它有一个更酷炫的名称叫做蒙特卡罗仿真 (monte-carlo simulation)，这个名字来源于世界著名的赌城摩纳哥的蒙特卡罗。 通过对研究问题或系统进行随机抽样，然后对样本值进行统计分析，进而得到所研究问题或系统的某些具体参数、统计量等。 这种计算方法以概率与统计理论为基础，由威勒蒙和冯纽曼在 20 世纪 40 年代为研制武器而首先提出，在此之前，作为该方法的基本思想，实际上早就被统计学家发现和利用。</p>\n<p>1.1 两个要点<br>\n蒙特卡罗仿真的要点有二：</p>\n<p>(1) 建立计算机模型以近似作为研究对象的物理系统的行为</p>\n<p>(2) 不确定性 (uncertainty) 或者说随机性 (stochasticity) 的处理。 需要在计算机程序中模仿随机性，比如说随机数的生成，或者随机事件的发生</p>\n<p>1.2 模拟的利弊 [2]</p>\n<p>优势</p>\n<ul>\n<li>\n<p>可能适用于无法分析处理的问题</p>\n</li>\n<li>\n<p>更高水平的建模细节（并不一定意味着增加真实感）</p>\n</li>\n<li>\n<p>允许对其他昂贵（例如高风险）或不可行的现场实验进行模拟实验</p>\n</li>\n<li>\n<p>假设分析：试错程序</p>\n</li>\n<li>\n<p>可用于测试数学假设的有效性（例如，验证分析模型）</p>\n</li>\n</ul>\n<p>弊端</p>\n<ul>\n<li>\n<p>假设分析：难以发展因果关系</p>\n</li>\n<li>\n<p>计算昂贵的数学工具（需要多次复制）</p>\n</li>\n<li>\n<p>对输出进行适当的统计分析很复杂</p>\n</li>\n<li>\n<p>详细的模型需要制定和校准非常详细的数据</p>\n</li>\n<li>\n<p>数据质量， “垃圾进，垃圾出”</p>\n</li>\n<li>\n<p>难以用于执行优化（基于模拟的优化）</p>\n</li>\n<li>\n<p>正如分析模型一样，仿真模型基于众多</p>\n</li>\n<li>\n<p>假设和近似值，请谨慎使用并记住</p>\n</li>\n<li>\n<p>这是对现实的简化，即模型！</p>\n</li>\n</ul>\n<p><b>蒙特卡洛仿真的最基本要素即为随机数的产生</b></p>\n<p>在 python 库中，Random 和 Numpy 提供了强大的处理工具.</p>\n<p>可以使用这两个模块产生相应的随机数序列:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> math<span class=\"comment\">#这句没啥必要</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"comment\">#实数序列</span></span><br><span class=\"line\">fig,ax = plt.subplots(<span class=\"number\">3</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">rand0 = np.random.random(<span class=\"number\">100000</span>)</span><br><span class=\"line\">ax[<span class=\"number\">0</span>].hist(rand0)</span><br><span class=\"line\"><span class=\"comment\">#虚数序列</span></span><br><span class=\"line\">rand1 = np.random.randint(<span class=\"number\">0</span>,<span class=\"number\">1000</span>,<span class=\"number\">10000</span>)</span><br><span class=\"line\">ax[<span class=\"number\">1</span>]=hist(rand1)</span><br><span class=\"line\"><span class=\"comment\">#正态分布</span></span><br><span class=\"line\">rand2 = np.random.randn(<span class=\"number\">10000</span>)</span><br><span class=\"line\">ax[<span class=\"number\">2</span>]=hist(rand2,bins=<span class=\"number\">100</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"抛硬币实验\"><a class=\"markdownIt-Anchor\" href=\"#抛硬币实验\">#</a> 抛硬币实验:</h4>\n<p>通过 python 进行试验，估计出出现正反面的经验性概率:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># coin-tossing</span></span><br><span class=\"line\">num_tosses  = [<span class=\"number\">1000</span>,<span class=\"number\">10000</span>,<span class=\"number\">100000</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> num_toss <span class=\"keyword\">in</span> num_tosses:</span><br><span class=\"line\">    <span class=\"comment\">#np.random.seed(42)</span></span><br><span class=\"line\">    coin_toss = np.random.random(num_toss)</span><br><span class=\"line\">    head = coin_toss &gt;= <span class=\"number\">0.5</span></span><br><span class=\"line\">    tail = coin_toss &lt;  <span class=\"number\">0.5</span></span><br><span class=\"line\">    head_count = np.<span class=\"built_in\">sum</span>(head)</span><br><span class=\"line\">    tail_count = np.<span class=\"built_in\">sum</span>(tail)</span><br><span class=\"line\">    head_prob  = head_count/num_toss</span><br><span class=\"line\">    tail_prob  = tail_count/num_toss</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;num_toss = &#123;0&#125;, head_prob=&#123;1&#125;, tail_prob=&#123;2&#125;&#x27;</span>.<span class=\"built_in\">format</span>(num_toss,head_prob,tail_prob))</span><br></pre></td></tr></table></figure>\n<p>在实验次数越来越多的情况下，两个概率无限接近于 0.5, 说明试验性结果具有随机性.</p>\n<p>但是，概率论中的大数定律告诉我们，当实验次数越大，这个估计概率就有越大的概率更接近真实的概率（在以上例子中就是 0.5）。 眼尖的人也许已经看出来了，上面 100000 次的实验（记为 1000000-toss）中的估计结果并没有比 10000 次的实验（记为 10000-toss）结果更接近 0.5，这是咋回事？在随机世界里一切都是概率，如上面加粗的字体所示，抛掷次数越多只是使得估计值接近真实值的概率更大了！</p>\n<h4 id=\"抛骰子\"><a class=\"markdownIt-Anchor\" href=\"#抛骰子\">#</a> 抛骰子:</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">num_rolling  = [<span class=\"number\">1000</span>,<span class=\"number\">10000</span>,<span class=\"number\">100000</span>]    </span><br><span class=\"line\"><span class=\"keyword\">for</span> num_roll <span class=\"keyword\">in</span> num_rolling:</span><br><span class=\"line\">    die_roll = np.random.random(num_roll)</span><br><span class=\"line\">    one   = die_roll &lt;   <span class=\"number\">1</span>/<span class=\"number\">6</span></span><br><span class=\"line\">    two   = np.logical_and(die_roll &gt;=  <span class=\"number\">1</span>/<span class=\"number\">6</span>, die_roll &lt; <span class=\"number\">2</span>/<span class=\"number\">6</span>)</span><br><span class=\"line\">    three = np.logical_and(die_roll &gt;=  <span class=\"number\">2</span>/<span class=\"number\">6</span>, die_roll &lt; <span class=\"number\">3</span>/<span class=\"number\">6</span>)</span><br><span class=\"line\">    four  = np.logical_and(die_roll &gt;=  <span class=\"number\">3</span>/<span class=\"number\">6</span>, die_roll &lt; <span class=\"number\">4</span>/<span class=\"number\">6</span>)</span><br><span class=\"line\">    five  = np.logical_and(die_roll &gt;=  <span class=\"number\">4</span>/<span class=\"number\">6</span>, die_roll &lt; <span class=\"number\">5</span>/<span class=\"number\">6</span>)</span><br><span class=\"line\">    six   = die_roll &gt;=  <span class=\"number\">5</span>/<span class=\"number\">6</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    prob_one   = np.<span class=\"built_in\">sum</span>(one)  /num_roll</span><br><span class=\"line\">    prob_two   = np.<span class=\"built_in\">sum</span>(two)  /num_roll</span><br><span class=\"line\">    prob_three = np.<span class=\"built_in\">sum</span>(three)/num_roll</span><br><span class=\"line\">    prob_four  = np.<span class=\"built_in\">sum</span>(four) /num_roll</span><br><span class=\"line\">    prob_five  = np.<span class=\"built_in\">sum</span>(five) /num_roll</span><br><span class=\"line\">    prob_six   = np.<span class=\"built_in\">sum</span>(six)  /num_roll</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;num_roll = &#123;0&#125;, prob_one=&#123;1&#125;, prob_two=&#123;2&#125;, prob_three=&#123;3&#125;, prob_four=&#123;4&#125;, prob_five=&#123;5&#125;, prob_6=&#123;6&#125;&#x27;</span>\\</span><br><span class=\"line\">          .<span class=\"built_in\">format</span>(num_roll,prob_one,prob_two,prob_three,prob_four,prob_five,prob_six))</span><br></pre></td></tr></table></figure>\n<p>概率也是无限接近于 0.166667 (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mn>1</mn><mn>6</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{1}{6}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.190108em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">6</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>)</p>\n<h4 id=\"用蒙特卡罗仿真求pi值\"><a class=\"markdownIt-Anchor\" href=\"#用蒙特卡罗仿真求pi值\">#</a> 用蒙特卡罗仿真求 pi 值</h4>\n<p>在以上两个实验中，只有一个随机变量（每次只扔一个硬币或者一个骰子，反映这个实验结果的成为一个随机变量）。我们也可以在每次实验中扔两个或者多个硬币或骰子，这样相当于通识产生了两个随机变量的样本，这两个随机变量拼在一起构成一个随机向量，或者一个 2 维或多维随机变量。基于一个随机变量能做的事情是有限，但是增加随机变量的个数，就可以做更复杂的事情，比如说对更复杂的系统进行模拟。以下，我们来看一个基于蒙特卡罗仿真求圆周率的近似值的方法。</p>\n<p 4>其基本思想如下：我们直到一个半径为 1 的圆（也称为单位圆）内接于一个边长为 2 的正方形。单位园的面积是，而其内接于的正方形的面积为 4。假设以单位圆的圆心作为坐标原点（0,0），然后我们往这正方形内随机地扔‘小球’。每次小球的落点的坐标记为（x,y），它们分别可看作随机变量 X 和 Y 的样本值。显而易见的是（即便不是那么显而易见，要想解释起来似乎还比较麻烦<sup> -</sup>，所以如果你不觉得那么显而易见，就先接受它吧<sup> -</sup>），X 和 Y 分别是在 [-1,1] 区间内服从均一分布。当我们扔小球的次数足够多时，小球落在单位圆内的比率应该就近似地等于单位圆面积与正方形面积之比，即\\frac{∏}</p>\n<p>仿真代码:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Find the approximation of pie using monte-carlo simulation</span></span><br><span class=\"line\">num_trials  = [<span class=\"number\">1000</span>,<span class=\"number\">10000</span>,<span class=\"number\">100000</span>,<span class=\"built_in\">int</span>(<span class=\"number\">1e6</span>),<span class=\"built_in\">int</span>(<span class=\"number\">1e7</span>)]    </span><br><span class=\"line\"><span class=\"keyword\">for</span> num_trial <span class=\"keyword\">in</span> num_trials:</span><br><span class=\"line\">    x     = np.random.random(num_trial) * <span class=\"number\">2</span> - <span class=\"number\">1</span></span><br><span class=\"line\">    y     = np.random.random(num_trial) * <span class=\"number\">2</span> - <span class=\"number\">1</span></span><br><span class=\"line\">        </span><br><span class=\"line\">    d     = np.sqrt(x**<span class=\"number\">2</span> + y**<span class=\"number\">2</span>)</span><br><span class=\"line\">    in_circle = (d &lt;= <span class=\"number\">1</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    pi_esti = <span class=\"number\">4</span> * np.mean(in_circle)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;num_trial = &#123;0&#125;, pi_esti=&#123;1&#125;, err = &#123;2&#125;&#x27;</span>.<span class=\"built_in\">format</span>(num_trial,pi_esti,np.<span class=\"built_in\">abs</span>(pi_esti-np.pi)))</span><br></pre></td></tr></table></figure>\n<p>从仿真结果来看，误差随着仍小球的次数（num_trial）增大而减小的趋势非常明显。</p>\n<p>但是，正如前面所解释的那样，这个就每次实验而言，这种趋势并不是确定性的，而是概率意义上的。如果你在运行它是偶尔发现 num_trial 大的情况的误差反而比 num_trial 较小的情况的误差要大，也不要感到惊讶。因为，从概率意义上来说这个的确是可能发生的。</p>\n<hr>\n<h2 id=\"蒙特卡罗仿真醉汉走路\"><a class=\"markdownIt-Anchor\" href=\"#蒙特卡罗仿真醉汉走路\">#</a> 蒙特卡罗仿真 + 醉汉走路</h2>\n<p>在问题中，醉汉从坐标原点（0，0）出发，每一步他可能向东南西北四个方向随机选择一个方向向前走一步（一个坐标单位）。在第一步之后他的位置有<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>4</mn><mi>k</mi></msup></mrow><annotation encoding=\"application/x-tex\">4^k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.849108em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\">4</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span></span></span></span> 种可能性。以后每走一步都会四种可能性，因此经过 k 步之后，他可能的位置有种可能性。。。当然，这是不准确的。因为只谈论位置的话，他有可能重复回到某个位置，因此 k 步之后，他可能的位置可能性数会小于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>4</mn><mi>k</mi></msup></mrow><annotation encoding=\"application/x-tex\">4^k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.849108em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\">4</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span></span></span></span> 种可能性。但是如果我们谈论从第一步开始之后的轨迹的话，则的确会有<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>4</mn><mi>k</mi></msup></mrow><annotation encoding=\"application/x-tex\">4^k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.849108em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\">4</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span></span></span></span> 种可能性。</p>\n<p>由于可能的轨迹数随着步数呈指数增长，所以关注某一次实验中中 k 步之后醉汉位置在哪儿可能价值不大。我们可能更关心的是，在 k 步之后醉汉离原点的距离的预期均值是多少，呈什么样的分布，最远到过多远，出发以后有没有回到过原点，等等等等。显然这样的问题我们无法通过计算得到一个确定性的值，我们有两种选择：</p>\n<p>基于随机过程理论进行理论解析<br>\n基于蒙特卡洛仿真得到近似结果<br>\n事实上对于绝大多数人来说，只有一种选择，那就是蒙特卡罗仿真法，只要会编程就可以做得到。第一种选择需要相当程度的数学能力（特别是随机过程理论方面）。</p>\n<p>使用 python 代码如下:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">Created on Sat Mar 26 11:41:18 2022</span></span><br><span class=\"line\"><span class=\"string\">@author: Chenxy</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"> </span><br><span class=\"line\">steps = np.array([(<span class=\"number\">1</span>,<span class=\"number\">0</span>), (<span class=\"number\">0</span>,-<span class=\"number\">1</span>), (-<span class=\"number\">1</span>,<span class=\"number\">0</span>),(<span class=\"number\">0</span>,<span class=\"number\">1</span>)]) <span class=\"comment\"># East, South, West, North</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">random_walk</span>(<span class=\"params\">numSteps</span>):    </span><br><span class=\"line\">    locs      = np.zeros((numSteps,<span class=\"number\">2</span>))</span><br><span class=\"line\">    return2start = <span class=\"literal\">False</span></span><br><span class=\"line\">    dist_max  = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,numSteps):</span><br><span class=\"line\">        step = steps[np.random.choice(np.arange(<span class=\"number\">4</span>))]</span><br><span class=\"line\">        locs[k]  = locs[k-<span class=\"number\">1</span>] + step</span><br><span class=\"line\"> </span><br><span class=\"line\">    dist     = np.sqrt(locs[:,<span class=\"number\">0</span>]**<span class=\"number\">2</span> + locs[:,<span class=\"number\">1</span>]**<span class=\"number\">2</span>)</span><br><span class=\"line\">    dist_max = np.<span class=\"built_in\">max</span>(dist)</span><br><span class=\"line\">    return2start = np.<span class=\"built_in\">min</span>(dist[<span class=\"number\">1</span>:]) == <span class=\"number\">0</span> </span><br><span class=\"line\">    final_loc  = locs[-<span class=\"number\">1</span>]</span><br><span class=\"line\">    final_dist = dist[-<span class=\"number\">1</span>]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> return2start, dist_max, final_loc,final_dist</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">multiple_walks</span>(<span class=\"params\">numSteps, numRuns</span>):    </span><br><span class=\"line\"> </span><br><span class=\"line\">    return2start = np.zeros((numRuns,))</span><br><span class=\"line\">    dist_max     = np.zeros((numRuns,))</span><br><span class=\"line\">    final_loc    = np.zeros((numRuns,<span class=\"number\">2</span>))</span><br><span class=\"line\">    final_dist   = np.zeros((numRuns,))</span><br><span class=\"line\"> </span><br><span class=\"line\">    tstart =time.time()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(numRuns):</span><br><span class=\"line\">        return2start[k], dist_max[k], final_loc[k,:],final_dist[k] = random_walk(numSteps)        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> k%<span class=\"number\">1000</span>==<span class=\"number\">0</span>: </span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;k=&#123;0&#125;&#x27;</span>.<span class=\"built_in\">format</span>(k))</span><br><span class=\"line\">    tstop  =time.time()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Time cost for &#123;0&#125; simulation with numSteps=&#123;1&#125; is &#123;2:6.2f&#125;(sec)&#x27;</span>.<span class=\"built_in\">format</span>(numRuns,numSteps,tstop-tstart))</span><br><span class=\"line\">    fail_ratio_to_return_start = <span class=\"number\">1</span>-np.<span class=\"built_in\">sum</span>(return2start)/numRuns</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;failure ratio to return to start point = &#123;0:4.2f&#125;%&#x27;</span>.<span class=\"built_in\">format</span>(fail_ratio_to_return_start*<span class=\"number\">100</span>))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;dist_max: mean=&#123;0&#125;, std=&#123;1&#125;&#x27;</span>.<span class=\"built_in\">format</span>(np.mean(dist_max),np.std(dist_max)))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;final_dist: mean=&#123;0&#125;, std=&#123;1&#125;&#x27;</span>.<span class=\"built_in\">format</span>(np.mean(final_dist),np.std(final_dist)))</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\"># Visualize the simulation result</span></span><br><span class=\"line\">    fig,ax = plt.subplots(<span class=\"number\">1</span>,<span class=\"number\">2</span>,figsize=(<span class=\"number\">16</span>,<span class=\"number\">8</span>))</span><br><span class=\"line\">    ax[<span class=\"number\">0</span>].hist(dist_max,bins=<span class=\"number\">50</span>, density=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    ax[<span class=\"number\">0</span>].set_title(<span class=\"string\">&#x27;dist_max histogram, with numSteps=&#123;0&#125;&#x27;</span>.<span class=\"built_in\">format</span>(numSteps))</span><br><span class=\"line\">    ax[<span class=\"number\">1</span>].hist(final_dist,bins=<span class=\"number\">50</span>, density=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    ax[<span class=\"number\">1</span>].set_title(<span class=\"string\">&#x27;final_dist histogram, with numSteps=&#123;0&#125;&#x27;</span>.<span class=\"built_in\">format</span>(numSteps))</span><br><span class=\"line\"> </span><br><span class=\"line\">    fig,ax = plt.subplots()</span><br><span class=\"line\">    ax.scatter(final_loc[:,<span class=\"number\">0</span>],final_loc[:,<span class=\"number\">1</span>])</span><br><span class=\"line\">    ax.set_title(<span class=\"string\">&#x27;final_loc scatter plot, with numSteps=&#123;0&#125;&#x27;</span>.<span class=\"built_in\">format</span>(numSteps))</span><br></pre></td></tr></table></figure>\n<h3 id=\"observation\"><a class=\"markdownIt-Anchor\" href=\"#observation\">#</a> Observation</h3>\n<ol>\n<li>醉汉有一定的概率回不了家</li>\n<li>到过的最远距离与最终距离的均值和方差有差异</li>\n<li>最远距离与最终距离的均值和方差都大致与 sqrt (numSteps) 相当</li>\n</ol>\n<p>如何解释这些结果呢？这些结果有什么必然性吗？仿真可以提供这些结果（当然前提条件是确保仿真本身是正确的），仿真本身回答不了这些问题，但是可以为理论分析提供线索和方向。但是，当一个仿真模型通过实验结果与理论分析得到确认后，就可以基于此进行预测，充当深入到理论分析无法或者至少难以涉足的 “无人区” 去探索的有力工具了。</p>\n<hr>\n<h2 id=\"关于醉汉是否能回家的结论\"><a class=\"markdownIt-Anchor\" href=\"#关于醉汉是否能回家的结论\">#</a> 关于醉汉是否能回家的结论</h2>\n<p>1905 年，英国统计学家 Pearson 在《自然》杂志上公开求解随机游走问题（Random Walk Problem）：如果一个醉汉走路时每步的方向和大小完全随机（本文上面的仿真是限定于较简单的情况，即方向限定于 4 个，每步大小均一），经过一段时间之后，在什么地方找到他的可能性最大？</p>\n<p>1921 年，美籍匈牙利数学家波利亚（George Pólya，1887 年－1985 年）在研究随机游走问题后，证明了 “一维或二维随机游走具有常返性” 的随机游走定理，即只要时间足够长，他最终总能回到出发点。因此，最终回家的概率是 100% 。</p>\n<p>酒鬼不可能在空中游走，鸟儿的活动空间才是 3 维的，因此，美国日裔数学家角谷静夫（Shizuo Kakutani，1911–2004）将波利亚定理用一句通俗又十分风趣的语言来总结：醉汉总能找到回家的路，喝醉的小鸟则可能永远也回不了家。随机游走定理也常被称为醉汉回家定理。</p>\n<p>以上仿真结果中虽然醉汉有一定概率回不了家，但是这个只是因为仿真步数不够大而已。理论上，让醉汉一直走下去，总会回到家的。以上结果也的确表明仿真步数越长，回不到家的概况在逐渐下降，这个趋势符合预期。</p>\n<hr>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h2>\n<p>虽然不太懂随机游走的研究是否有意义，但是个人认为对概率数学展开研究是有必要的.LMAO</p>\n<p>附 1: 一维 / 二维情况下的随机漫步代码实现:</p>\n<p>一维:x 为时间轴，y 距离</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#-*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">Randwalk</span>(<span class=\"params\">n</span>):</span><br><span class=\"line\">    x = <span class=\"number\">0</span></span><br><span class=\"line\">    y = <span class=\"number\">0</span></span><br><span class=\"line\">    distance=<span class=\"number\">0</span></span><br><span class=\"line\">    time = [x]</span><br><span class=\"line\">    position = [y]</span><br><span class=\"line\">    E=[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span> (<span class=\"number\">1</span>,n+<span class=\"number\">1</span>):</span><br><span class=\"line\">        move = np.random.uniform(<span class=\"number\">0</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> move &lt; <span class=\"number\">0.5</span>:</span><br><span class=\"line\">            x += <span class=\"number\">1</span></span><br><span class=\"line\">            y += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> move &gt; <span class=\"number\">0.5</span>:</span><br><span class=\"line\">            x += <span class=\"number\">1</span></span><br><span class=\"line\">            y += -<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">        time.append(x)</span><br><span class=\"line\">        position.append(y)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [time,position]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;Trials and plots&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">Randwalk1 = Randwalk(<span class=\"number\">1</span>)</span><br><span class=\"line\">Randwalk2 = Randwalk(<span class=\"number\">1</span>)</span><br><span class=\"line\">Randwalk3 = Randwalk(<span class=\"number\">1</span>)</span><br><span class=\"line\">Randwalk4 = Randwalk(<span class=\"number\">1</span>)</span><br><span class=\"line\">Randwalk5 = Randwalk(<span class=\"number\">1</span>)</span><br><span class=\"line\">plt.plot(Randwalk1[<span class=\"number\">0</span>],Randwalk1[<span class=\"number\">1</span>],<span class=\"string\">&#x27;r-&#x27;</span>, label = <span class=\"string\">&quot;Randwalk1&quot;</span>)</span><br><span class=\"line\">plt.plot(Randwalk2[<span class=\"number\">0</span>],Randwalk2[<span class=\"number\">1</span>],<span class=\"string\">&#x27;g-&#x27;</span>, label = <span class=\"string\">&quot;Randwalk2&quot;</span>)</span><br><span class=\"line\">plt.plot(Randwalk3[<span class=\"number\">0</span>],Randwalk3[<span class=\"number\">1</span>],<span class=\"string\">&#x27;b-&#x27;</span>, label = <span class=\"string\">&quot;Randwalk3&quot;</span>)</span><br><span class=\"line\">plt.plot(Randwalk4[<span class=\"number\">0</span>],Randwalk4[<span class=\"number\">1</span>],<span class=\"string\">&#x27;yellow&#x27;</span>, label = <span class=\"string\">&quot;Randwalk4&quot;</span>)</span><br><span class=\"line\">plt.plot(Randwalk5[<span class=\"number\">0</span>],Randwalk5[<span class=\"number\">1</span>],<span class=\"string\">&#x27;black&#x27;</span>, label = <span class=\"string\">&quot;Randwalk5&quot;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&quot;1D Random Walks&quot;</span>)</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;upper center&#x27;</span>, bbox_to_anchor=(<span class=\"number\">0.5</span>,-<span class=\"number\">0.1</span>), fancybox=<span class=\"literal\">True</span>, shadow=<span class=\"literal\">True</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<p>二维: y 距离，x 时间</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">steps = np.array([(<span class=\"number\">1</span>,<span class=\"number\">0</span>), (<span class=\"number\">0</span>,-<span class=\"number\">1</span>), (-<span class=\"number\">1</span>,<span class=\"number\">0</span>),(<span class=\"number\">0</span>,<span class=\"number\">1</span>)]) <span class=\"comment\"># East, South, West, North</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(steps)</span><br><span class=\"line\">numSteps = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;输入一个&quot;</span>))</span><br><span class=\"line\">locs = np.zeros((numSteps,<span class=\"number\">2</span>))</span><br><span class=\"line\"><span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>,numSteps):</span><br><span class=\"line\">    step = steps[np.random.choice(np.arange(<span class=\"number\">4</span>))]</span><br><span class=\"line\">    locs[k]  = locs[k-<span class=\"number\">1</span>] + step</span><br><span class=\"line\">    </span><br><span class=\"line\">dist = np.sqrt(locs[:,<span class=\"number\">0</span>]**<span class=\"number\">2</span> + locs[:,<span class=\"number\">1</span>]**<span class=\"number\">2</span>)            </span><br><span class=\"line\">origins = [] </span><br><span class=\"line\"><span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(numSteps):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> locs[k,<span class=\"number\">0</span>]==<span class=\"number\">0</span> <span class=\"keyword\">and</span> locs[k,<span class=\"number\">1</span>]==<span class=\"number\">0</span>:</span><br><span class=\"line\">        origins.append(k)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;numSteps = &#123;0&#125;, final loc = &#123;1&#125;, dist = &#123;2&#125;&#x27;</span>.<span class=\"built_in\">format</span>(numSteps,locs[-<span class=\"number\">1</span>],dist[-<span class=\"number\">1</span>]))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(origins)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.plot(locs[:,<span class=\"number\">0</span>],locs[:,<span class=\"number\">1</span>])</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;random walks: &#123;0&#125; steps&#x27;</span>.<span class=\"built_in\">format</span>(numSteps))</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<hr>\n<p>附录 2: 参考文献</p>\n<p>百度百科:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTklOUElOEYlRTYlOUMlQkElRTYlQjglQjglRTglQjUlQjAvMTY3NDE0Ng==\"> 随机游走_百度百科 (baidu.com)</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTklOUElOEYlRTYlOUMlQkElRTYlOTUlQjA/ZnJvbU1vZHVsZT1sZW1tYV9zZWFyY2gtYm94\">随机数_百度百科 (baidu.com)</span></p>\n<p>Wiki:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvUmFuZG9tX3dhbGs=\">Random walk - Wikipedia</span></p>\n<p>CSDN:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NoZW54eV9id2F2ZS9hcnRpY2xlL2RldGFpbHMvMTIzNzQ3MjQ1\"> 蒙特卡罗仿真（2）：醉汉的随机漫步仿真示例（Python 实现）_笨牛慢耕的博客 - CSDN 博客_醉汉漫步</span></p>\n<p>[科学网 — 喝醉的酒鬼能找到回家的路吗？ - 高宏的博文 (<span class=\"exturl\" data-url=\"aHR0cDovL3NjaWVuY2VuZXQuY24=\">sciencenet.cn</span>)](</p>\n",
            "tags": [
                "cs"
            ]
        },
        {
            "id": "http://yoursite.com/2022/11/01/Wordpress/",
            "url": "http://yoursite.com/2022/11/01/Wordpress/",
            "title": "WordPress开Blog介绍",
            "date_published": "2022-11-01T04:45:05.000Z",
            "content_html": "<p>目前已选择使用 Hexo 搭建静态 Blog, 还就那个简洁 LMAO. 但是本文仍然适用于小白亲自写动态网页，后面也会陆续提供 Hexo 的新人建设 blog 方式.</p>\n<p><s>原话：在观看了 b 站某些 up 推荐的网站开发教程，刚好自己想通过网页 Blog 的形式完成记录相关记录，便利用星辰云的虚拟面板整了个动态网页型 Blog，以后为了方便会将网页部署回腾讯云的 server（到时候爷们直接 SQL 整体迁移）并完成备案工作</s></p>\n<p>制作网页教程其实说实在，只要资金充足，没啥干不了的，可能就是时间成本问题 LMAO</p>\n<p>现在进入正文：如何搭建个属于自己的网页（用虚拟面板开的动态）</p>\n<p>1. 去买个域名 (最好买一个)</p>\n<p>域名说简单点，就是网站地址，比如 https://baidu.com 这就是百度的域名，纯小白建议先去买个腾讯 / 阿里的域名，域名记得实名登记.</p>\n<p>2. 整个虚拟面板</p>\n<p>好了，现在有域名了，但是你还得要个云服务（比如企鹅的 Vps 和 Serverless）才能完成相关的网站建设，纯小白真不知道该干啥的或者想开箱即用（在国外部署不用备案）的，就买个香港的 Cloud service. 星辰云这种就是地址在香港的虚拟面板，掏钱好像也挺便宜的（其实自己用腾讯云部署安全点，毕竟有保障）. 买好面板后记下面板的账户密码，后面用得到</p>\n<p>3.DNS 解析</p>\n<p>现在面板和域名都有了，但是你先别急着搞，你还得要 DNS 从 DNSPOD 解析到面板才能开始部署捏，去腾讯云的控制台找你的域名，用添加解析的方式添加到面板 (一般面板会给你个解析网站和解析方式)，你照着填就好了</p>\n<p>4. 一键部署</p>\n<p>解析完成后，已经都差不多了</p>\n<p>进入面板，有个一键部署的，选 wordpress，点进去等一会儿，然后部署后会让你登录自己的域名，你照葫芦画瓢整进去就好，填完了东西之后，你再进入你的域名就会变成带有初始主题的网站</p>\n<p>5. 挑个主题</p>\n<p>你要是简约点，其实看到这里已经可以关闭了，但是，你就是想搞点二次元捏 ^ ^(比如我这种)，那你就去 Github 上找项目代码，下载打包的 ZIP 文件，在 Wordpress 的主题中上传你的 zip，等一会也是部署好了，重新进入你的域名就会带有新的主题的网站🌶。</p>\n",
            "tags": [
                "blog"
            ]
        },
        {
            "id": "http://yoursite.com/2022/10/31/markdown/",
            "url": "http://yoursite.com/2022/10/31/markdown/",
            "title": "Markdown Style test(English text)",
            "date_published": "2022-10-31T04:10:00.000Z",
            "content_html": "<p>This post is originated from <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vYXBhY2tlZXIvNDE1OTI2OA==\">here</span> and is used for testing markdown style. This post contains nearly every markdown usage. Make sure all the markdown elements below show up correctly.</p>\n<span id=\"more\"></span>\n<hr>\n<h2 id=\"headers\"><a class=\"markdownIt-Anchor\" href=\"#headers\">#</a> Headers</h2>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\"># H1</span></span><br><span class=\"line\"><span class=\"section\">## H2</span></span><br><span class=\"line\"><span class=\"section\">### H3</span></span><br><span class=\"line\"><span class=\"section\">#### H4</span></span><br><span class=\"line\"><span class=\"section\">##### H5</span></span><br><span class=\"line\"><span class=\"section\">###### H6</span></span><br><span class=\"line\"></span><br><span class=\"line\">Alternatively, for H1 and H2, an underline-ish style:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">Alt-H1</span></span><br><span class=\"line\"><span class=\"section\">======</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">Alt-H2</span></span><br><span class=\"line\"><span class=\"section\">------</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"h1\"><a class=\"markdownIt-Anchor\" href=\"#h1\">#</a> H1</h1>\n<h2 id=\"h2\"><a class=\"markdownIt-Anchor\" href=\"#h2\">#</a> H2</h2>\n<h3 id=\"h3\"><a class=\"markdownIt-Anchor\" href=\"#h3\">#</a> H3</h3>\n<h4 id=\"h4\"><a class=\"markdownIt-Anchor\" href=\"#h4\">#</a> H4</h4>\n<h5 id=\"h5\"><a class=\"markdownIt-Anchor\" href=\"#h5\">#</a> H5</h5>\n<h6 id=\"h6\"><a class=\"markdownIt-Anchor\" href=\"#h6\">#</a> H6</h6>\n<p>Alternatively, for H1 and H2, an underline-ish style:</p>\n<h1 id=\"alt-h1\"><a class=\"markdownIt-Anchor\" href=\"#alt-h1\">#</a> Alt-H1</h1>\n<h2 id=\"alt-h2\"><a class=\"markdownIt-Anchor\" href=\"#alt-h2\">#</a> Alt-H2</h2>\n<h2 id=\"emphasis\"><a class=\"markdownIt-Anchor\" href=\"#emphasis\">#</a> Emphasis</h2>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Emphasis, aka italics, with <span class=\"emphasis\">*asterisks*</span> or <span class=\"emphasis\">_underscores_</span>.</span><br><span class=\"line\"></span><br><span class=\"line\">Strong emphasis, aka bold, with <span class=\"strong\">**asterisks**</span> or <span class=\"strong\">__underscores__</span>.</span><br><span class=\"line\"></span><br><span class=\"line\">Combined emphasis with <span class=\"strong\">**asterisks and <span class=\"emphasis\">_underscores_</span>**</span>.</span><br><span class=\"line\"></span><br><span class=\"line\">Strikethrough uses two tildes. ~~Scratch this.~~</span><br></pre></td></tr></table></figure>\n<p>Emphasis, aka italics, with <em>asterisks</em> or <em>underscores</em>.</p>\n<p>Strong emphasis, aka bold, with <strong>asterisks</strong> or <strong>underscores</strong>.</p>\n<p>Combined emphasis with <strong>asterisks and <em>underscores</em></strong>.</p>\n<p>Strikethrough uses two tildes. <s>Scratch this.</s></p>\n<h2 id=\"lists\"><a class=\"markdownIt-Anchor\" href=\"#lists\">#</a> Lists</h2>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">1.</span> First ordered list item</span><br><span class=\"line\"><span class=\"bullet\">2.</span> Another item</span><br><span class=\"line\"><span class=\"bullet\">  *</span> Unordered sub-list.</span><br><span class=\"line\"><span class=\"bullet\">1.</span> Actual numbers don&#x27;t matter, just that it&#x27;s a number</span><br><span class=\"line\"><span class=\"bullet\">  1.</span> Ordered sub-list</span><br><span class=\"line\"><span class=\"bullet\">4.</span> And another item.</span><br><span class=\"line\"></span><br><span class=\"line\">   You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we&#x27;ll use three here to also align the raw Markdown).</span><br><span class=\"line\"></span><br><span class=\"line\">   To have a line break without a paragraph, you will need to use two trailing spaces.  </span><br><span class=\"line\">   Note that this line is separate, but within the same paragraph.  </span><br><span class=\"line\">   (This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">*</span> Unordered list can use asterisks</span><br><span class=\"line\"><span class=\"bullet\">-</span> Or minuses</span><br><span class=\"line\"><span class=\"bullet\">+</span> Or pluses</span><br><span class=\"line\"><span class=\"bullet\">-</span> Paragraph In unordered list</span><br><span class=\"line\"></span><br><span class=\"line\">  For example like this.</span><br><span class=\"line\"></span><br><span class=\"line\">Common Paragraph with some text.</span><br><span class=\"line\">And more text.</span><br></pre></td></tr></table></figure>\n<ol>\n<li>First ordered list item</li>\n<li>Another item</li>\n</ol>\n<ul>\n<li>Unordered sub-list.</li>\n</ul>\n<ol>\n<li>\n<p>Actual numbers don’t matter, just that it’s a number</p>\n</li>\n<li>\n<p>Ordered sub-list</p>\n</li>\n<li>\n<p>And another item.</p>\n<p>You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we’ll use three here to also align the raw Markdown).</p>\n<p>To have a line break without a paragraph, you will need to use two trailing spaces.<br>\nNote that this line is separate, but within the same paragraph.<br>\n(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)</p>\n</li>\n</ol>\n<ul>\n<li>Unordered list can use asterisks</li>\n</ul>\n<ul>\n<li>Or minuses</li>\n</ul>\n<ul>\n<li>Or pluses</li>\n</ul>\n<ul>\n<li>\n<p>Paragraph In unordered list</p>\n<p>For example like this.</p>\n</li>\n</ul>\n<p>Common Paragraph with some text.<br>\nAnd more text.</p>\n<h2 id=\"inline-html\"><a class=\"markdownIt-Anchor\" href=\"#inline-html\">#</a> Inline HTML</h2>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span>To reboot your computer, press <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">kbd</span>&gt;</span></span>ctrl<span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">kbd</span>&gt;</span></span>+<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">kbd</span>&gt;</span></span>alt<span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">kbd</span>&gt;</span></span>+<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">kbd</span>&gt;</span></span>del<span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">kbd</span>&gt;</span></span>.<span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p>To reboot your computer, press <kbd>ctrl</kbd>+<kbd>alt</kbd>+<kbd>del</kbd>.</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">dl</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"code\">    &lt;dt&gt;Definition list&lt;/dt&gt;</span></span><br><span class=\"line\"><span class=\"code\">    &lt;dd&gt;Is something people use sometimes.&lt;/dd&gt;</span></span><br><span class=\"line\"><span class=\"code\"></span></span><br><span class=\"line\"><span class=\"code\">    &lt;dt&gt;Markdown in HTML&lt;/dt&gt;</span></span><br><span class=\"line\"><span class=\"code\">    &lt;dd&gt;Does *not* work **very** well. Use HTML &lt;em&gt;tags&lt;/em&gt;.&lt;/dd&gt;</span></span><br><span class=\"line\"><span class=\"code\">&lt;/dl&gt;</span></span><br></pre></td></tr></table></figure>\n<dl>\n    <dt>Definition list</dt>\n    <dd>Is something people use sometimes.</dd>\n<pre><code>&lt;dt&gt;Markdown in HTML&lt;/dt&gt;\n&lt;dd&gt;Does *not* work **very** well. Use HTML &lt;em&gt;tags&lt;/em&gt;.&lt;/dd&gt;\n</code></pre>\n</dl>\n<h2 id=\"links\"><a class=\"markdownIt-Anchor\" href=\"#links\">#</a> Links</h2>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">I&#x27;m an inline-style link</span>](<span class=\"link\">https://www.google.com</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"string\">I&#x27;m an inline-style link with title</span>](<span class=\"link\">https://www.google.com &quot;Google&#x27;s Homepage&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"string\">I&#x27;m a reference-style link</span>][<span class=\"symbol\">Arbitrary case-insensitive reference text</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"string\">I&#x27;m a relative reference to a repository file</span>](<span class=\"link\">../blob/master/LICENSE</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"string\">You can use numbers for reference-style link definitions</span>][<span class=\"symbol\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">Or leave it empty and use the [link text itself]</span><br><span class=\"line\"></span><br><span class=\"line\">Some text to show that the reference links can follow later.</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">arbitrary case-insensitive reference text</span>]: <span class=\"link\">https://hexo.io</span></span><br><span class=\"line\">[<span class=\"symbol\">1</span>]: <span class=\"link\">https://hexo.io/docs/</span></span><br><span class=\"line\">[<span class=\"symbol\">link text itself</span>]: <span class=\"link\">https://hexo.io/api/</span></span><br></pre></td></tr></table></figure>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbQ==\">I’m an inline-style link</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbQ==\">I’m an inline-style link with title</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlv\">I’m a reference-style link</span></p>\n<p><a href=\"../blob/master/LICENSE\">I’m a relative reference to a repository file</a></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">You can use numbers for reference-style link definitions</span></p>\n<p>Or leave it empty and use the <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2FwaS8=\">link text itself</span></p>\n<p>Some text to show that the reference links can follow later.</p>\n<h2 id=\"images\"><a class=\"markdownIt-Anchor\" href=\"#images\">#</a> Images</h2>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hover to see the title text:</span><br><span class=\"line\"></span><br><span class=\"line\">Inline-style:</span><br><span class=\"line\"></span><br><span class=\"line\">![<span class=\"string\">alt text</span>](<span class=\"link\">https://hexo.io/icon/favicon-196x196.png &quot;Logo Title Text 1&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">Reference-style:</span><br><span class=\"line\">![<span class=\"string\">alt text</span>][<span class=\"symbol\">logo</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">logo</span>]: <span class=\"link\">https://hexo.io/icon/favicon-196x196.png &quot;Logo Title Text 2&quot;</span></span><br></pre></td></tr></table></figure>\n<p>hover to see the title text:</p>\n<p>Inline-style:</p>\n<p><img data-src=\"https://hexo.io/icon/favicon-196x196.png\" alt=\"alt text\" title=\"Logo Title Text 1\"></p>\n<p>Reference-style:<br>\n<img data-src=\"https://hexo.io/icon/favicon-196x196.png\" alt=\"alt text\" title=\"Logo Title Text 2\"></p>\n<h2 id=\"code-and-syntax-highlighting\"><a class=\"markdownIt-Anchor\" href=\"#code-and-syntax-highlighting\">#</a> Code and Syntax Highlighting</h2>\n<p>Inline  <code>code</code>  has  <code>back-ticks around</code>  it.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> s = <span class=\"string\">&quot;JavaScript syntax highlighting&quot;</span>;</span><br><span class=\"line\"><span class=\"title function_\">alert</span>(s);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s = <span class=\"string\">&quot;Python syntax highlighting&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span> s</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">No language indicated, so no syntax highlighting.</span><br><span class=\"line\">But let&#x27;s throw in a &lt;b&gt;tag&lt;/b&gt;.</span><br></pre></td></tr></table></figure>\n<h2 id=\"tables\"><a class=\"markdownIt-Anchor\" href=\"#tables\">#</a> Tables</h2>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|                |ASCII                          |HTML                         |</span><br><span class=\"line\">|----------------|-------------------------------|-----------------------------|</span><br><span class=\"line\">|Single backticks|<span class=\"code\">`&#x27;Isn&#x27;t this fun?&#x27;`</span>            |&#x27;Isn&#x27;t this fun?&#x27;            |</span><br><span class=\"line\">|Quotes          |<span class=\"code\">`&quot;Isn&#x27;t this fun?&quot;`</span>            |&quot;Isn&#x27;t this fun?&quot;            |</span><br><span class=\"line\">|Dashes          |<span class=\"code\">`-- is en-dash, --- is em-dash`</span>|-- is en-dash, --- is em-dash|</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>ASCII</th>\n<th>HTML</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Single backticks</td>\n<td><code>'Isn't this fun?'</code></td>\n<td>‘Isn’t this fun?’</td>\n</tr>\n<tr>\n<td>Quotes</td>\n<td><code>&quot;Isn't this fun?&quot;</code></td>\n<td>“Isn’t this fun?”</td>\n</tr>\n<tr>\n<td>Dashes</td>\n<td><code>-- is en-dash, --- is em-dash</code></td>\n<td>– is en-dash, — is em-dash</td>\n</tr>\n</tbody>\n</table>\n<p>Colons can be used to align columns.</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">| Tables        | Are           | Cool  |</span><br><span class=\"line\">| ------------- |:-------------:| -----:|</span><br><span class=\"line\">| col 3 is      | right-aligned |  |</span><br><span class=\"line\">| col 2 is      | centered      |    |</span><br><span class=\"line\">| zebra stripes | are neat      |   </span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Tables</th>\n<th style=\"text-align:center\">Are</th>\n<th style=\"text-align:right\">Cool</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>col 3 is</td>\n<td style=\"text-align:center\">right-aligned</td>\n<td style=\"text-align:right\"></td>\n</tr>\n<tr>\n<td>col 2 is</td>\n<td style=\"text-align:center\">centered</td>\n<td style=\"text-align:right\"></td>\n</tr>\n<tr>\n<td>zebra stripes</td>\n<td style=\"text-align:center\">are neat</td>\n<td style=\"text-align:right\"></td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td>The outer pipes (</td>\n<td style=\"text-align:center\">) are optional, and you don’t need to make the raw Markdown line up prettily. You can also use inline Markdown.</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Markdown | Less | Pretty</span><br><span class=\"line\">--- | --- | ---</span><br><span class=\"line\"><span class=\"emphasis\">*Still*</span> | <span class=\"code\">`renders`</span> | <span class=\"strong\">**nicely**</span></span><br><span class=\"line\">1 | 2 | 3</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Markdown</th>\n<th>Less</th>\n<th>Pretty</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>Still</em></td>\n<td><code>renders</code></td>\n<td><strong>nicely</strong></td>\n</tr>\n<tr>\n<td>1</td>\n<td>2</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>You can find more information about <strong>LaTeX</strong> mathematical expressions <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXRoLm1ldGEuc3RhY2tleGNoYW5nZS5jb20vcXVlc3Rpb25zLzUwMjAvbWF0aGpheC1iYXNpYy10dXRvcmlhbC1hbmQtcXVpY2stcmVmZXJlbmNl\">here</span>.</p>\n</blockquote>\n<h2 id=\"blockquotes\"><a class=\"markdownIt-Anchor\" href=\"#blockquotes\">#</a> Blockquotes</h2>\n<blockquote>\n<p>Blockquotes are very handy in email to emulate reply text.<br>\nThis line is part of the same quote.</p>\n</blockquote>\n<p>Quote break.</p>\n<blockquote>\n<p>This is a very long line that will still be quoted properly when it wraps. Oh boy let’s keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can <em>put</em> <strong>Markdown</strong> into a blockquote.</p>\n</blockquote>\n<h2 id=\"horizontal-rule\"><a class=\"markdownIt-Anchor\" href=\"#horizontal-rule\">#</a> Horizontal Rule</h2>\n<p>Three or more…</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\"></span><br><span class=\"line\">Hyphens</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"strong\">**<span class=\"emphasis\">*</span></span></span><br><span class=\"line\"><span class=\"emphasis\"><span class=\"strong\"></span></span></span><br><span class=\"line\"><span class=\"emphasis\"><span class=\"strong\">Asterisks</span></span></span><br><span class=\"line\"><span class=\"emphasis\"><span class=\"strong\"></span></span></span><br><span class=\"line\"><span class=\"emphasis\"><span class=\"strong\">___</span></span></span><br><span class=\"line\"><span class=\"emphasis\"><span class=\"strong\"></span></span></span><br><span class=\"line\"><span class=\"emphasis\"><span class=\"strong\">Underscores</span></span></span><br></pre></td></tr></table></figure>\n<hr>\n<p>Hyphens</p>\n<hr>\n<p>Asterisks</p>\n<hr>\n<p>Underscores</p>\n<h2 id=\"line-breaks\"><a class=\"markdownIt-Anchor\" href=\"#line-breaks\">#</a> Line Breaks</h2>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Here&#x27;s a line for us to start with.</span><br><span class=\"line\"></span><br><span class=\"line\">This line is separated from the one above by two newlines, so it will be a <span class=\"emphasis\">*separate paragraph*</span>.</span><br><span class=\"line\"></span><br><span class=\"line\">This line is also a separate paragraph, but...</span><br><span class=\"line\">This line is only separated by a single newline, so it&#x27;s a separate line in the <span class=\"emphasis\">*same paragraph*</span>.</span><br></pre></td></tr></table></figure>\n<p>Here’s a line for us to start with.</p>\n<p>This line is separated from the one above by two newlines, so it will be a <em>separate paragraph</em>.</p>\n<p>This line is also a separate paragraph, but…<br>\nThis line is only separated by a single newline, so it’s a separate line in the <em>same paragraph</em>.</p>\n<hr>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">This is a regular paragraph.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"code\">    &lt;tr&gt;</span></span><br><span class=\"line\"><span class=\"code\">        &lt;td&gt;Foo&lt;/td&gt;</span></span><br><span class=\"line\"><span class=\"code\">    &lt;/tr&gt;</span></span><br><span class=\"line\"><span class=\"code\">&lt;/table&gt;</span></span><br><span class=\"line\"><span class=\"code\"></span></span><br><span class=\"line\">This is another regular paragraph.</span><br></pre></td></tr></table></figure>\n<p>This is a regular paragraph.</p>\n<table>\n    <tr>\n        <td>Foo</td>\n    </tr>\n</table>\n<p>This is another regular paragraph.</p>\n<h2 id=\"youtube-videos\"><a class=\"markdownIt-Anchor\" href=\"#youtube-videos\">#</a> Youtube videos</h2>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://www.youtube.com/watch?feature=player_embedded&amp;v=ARted4RniaU</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\"><span class=\"language-xml\">&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span></span><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://img.youtube.com/vi/ARted4RniaU/0.jpg&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\"><span class=\"attr\">alt</span>=<span class=\"string\">&quot;IMAGE ALT TEXT HERE&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;240&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;180&quot;</span> <span class=\"attr\">border</span>=<span class=\"string\">&quot;10&quot;</span> /&gt;</span></span><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">Pure markdown version:</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"string\">![IMAGE ALT TEXT HERE</span>](<span class=\"link\">https://img.youtube.com/vi/ARted4RniaU/0.jpg</span>)](<span class=\"link\">https://www.youtube.com/watch?v=ARted4RniaU</span>)</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://www.youtube.com/watch?feature=player_embedded&v=ARted4RniaU\n\" target=\"_blank\"><img data-src=\"https://img.youtube.com/vi/ARted4RniaU/0.jpg\" alt=\"IMAGE ALT TEXT HERE\" width=\"240\" height=\"180\" border=\"10\"></a></p>\n<p>Pure markdown version:</p>\n<p><a href=\"https://www.youtube.com/watch?v=ARted4RniaU\"><img data-src=\"https://img.youtube.com/vi/ARted4RniaU/0.jpg\" alt=\"IMAGE ALT TEXT HERE\"></a></p>\n",
            "tags": [
                "mark"
            ]
        },
        {
            "id": "http://yoursite.com/2022/10/31/markdown%20Chinese%20file/",
            "url": "http://yoursite.com/2022/10/31/markdown%20Chinese%20file/",
            "title": "markdown中文语法介绍",
            "date_published": "2022-10-30T17:30:38.000Z",
            "content_html": "<h3 id=\"ps1以下内容从b站up主sakiyary搬运过来的附带个视频链接markdown-typoravscode-超全教程-给大一新生安利的文本神器-httpswwwbilibilicomvideobv1hg411p7fxvd_source68e6b59a31ec0e8cdf66bdbe71f5208e\"><a class=\"markdownIt-Anchor\" href=\"#ps1以下内容从b站up主sakiyary搬运过来的附带个视频链接markdown-typoravscode-超全教程-给大一新生安利的文本神器-httpswwwbilibilicomvideobv1hg411p7fxvd_source68e6b59a31ec0e8cdf66bdbe71f5208e\">#</a> Ps1: 以下内容从 b 站 up 主:<strong>Sakiyary</strong> 搬运过来的，附带个视频链接:【[Markdown + Typora/VSCode 超全教程] 给大一新生安利的文本神器！】<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWhHNDExcDdmWD92ZF9zb3VyY2U9NjhlNmI1OWEzMWVjMGU4Y2RmNjZiZGJlNzFmNTIwOGU=\">https://www.bilibili.com/video/BV1hG411p7fX?vd_source=68e6b59a31ec0e8cdf66bdbe71f5208e</span></h3>\n<h3 id=\"ps2由于主题设置问题h1一级标题无法正常显示在我文章里会显示井号实际操作上你直接打出来的还是没有问题\"><a class=\"markdownIt-Anchor\" href=\"#ps2由于主题设置问题h1一级标题无法正常显示在我文章里会显示井号实际操作上你直接打出来的还是没有问题\">#</a> ps2: 由于主题设置问题，H1 (一级标题) 无法正常显示，在我文章里会显示井号 #, 实际操作上你直接打出来的还是没有问题 = =</h3>\n<h1 id=\"markdowntyporavscode-超全教程-给大一新生安利的文本神器\"><a class=\"markdownIt-Anchor\" href=\"#markdowntyporavscode-超全教程-给大一新生安利的文本神器\">#</a> [Markdown+Typora/VSCode 超全教程] 给大一新生安利的文本神器</h1>\n<p>Sakiyary 2022/7/16</p>\n<h2 id=\"简要介绍\"><a class=\"markdownIt-Anchor\" href=\"#简要介绍\">#</a> 😂 简要介绍</h2>\n<p><strong>Markdown</strong> 是一种轻量型标记语言，是一种语法。以  <code>.md</code>  结尾的文本文件就是 Markdown 文件。相较于 <strong>Word</strong>, 它更加像是 <strong>HTML</strong> 语言或是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>LaTeX</mtext></mrow><annotation encoding=\"application/x-tex\">\\LaTeX</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.89883em;vertical-align:-0.2155em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">L</span><span class=\"mspace\" style=\"margin-right:-0.36em;\"></span><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.68333em;\"><span style=\"top:-2.904999em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord\"><span class=\"mord textrm mtight sizing reset-size6 size3\">A</span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:-0.15em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">T</span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.46782999999999997em;\"><span style=\"top:-2.7845em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord textrm\">E</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2155em;\"><span></span></span></span></span><span class=\"mspace\" style=\"margin-right:-0.125em;\"></span><span class=\"mord textrm\">X</span></span></span></span></span></span>, 并不是最淳朴的那种 &quot;所见即所得&quot;. 它处处透露着一种极简主义。高效简洁清晰的同时，又很简单。看起来舒服，语法简单，尤其在处理纯文本上有很大的优势.</p>\n<p>它相较于 <strong>Word</strong>, 兼容性非常高，可以跨平台使用，不用担心奇奇怪怪的版本兼容问题。同时，有许多网站都支持或正在使用 <strong>Markdown</strong> 语法。如 <strong>Github</strong> (等一系列代码托管平台), StackOverflow (等答疑平台), 简书，语雀 (等一系列笔记平台).</p>\n<h2 id=\"实际应用\"><a class=\"markdownIt-Anchor\" href=\"#实际应用\">#</a> 📐 实际应用</h2>\n<p>所有要写文本的时候都可以用上 <strong>Markdown</strong>!</p>\n<p>它可以让你不再纠结什么字体，什么样式，什么排版。而且逻辑清晰，层次分明.</p>\n<p>像我大一的时候就用 Markdown 来写各种笔记，演讲稿，课程论文，实验报告，代码的  <code>README.md</code>  … 包括本教程文档.</p>\n<h2 id=\"工具\"><a class=\"markdownIt-Anchor\" href=\"#工具\">#</a> 🍴 工具</h2>\n<p>Markdown 只是一种语法。那么用来写 Markdown 的文本编辑器呢？我推荐的是 <strong>Typora</strong> 或者 <strong>VS Code</strong></p>\n<h3 id=\"typora\"><a class=\"markdownIt-Anchor\" href=\"#typora\">#</a> Typora</h3>\n<p>Typora 应该是被广泛用于写 Markdown 的文本软件，就和 Markdown 语法一样高效。而且它还有很实用的扩展语法与自定义样式的功能。其能将  <code>.md</code>  导出成多种文件，如  <code>.pdf</code> ,  <code>.html</code> ,  <code>.docx</code>  (没想到吧，能导出到 Word)</p>\n<p>但是现在 Typora 已经发布正式版并且变为收费软件。中文官网在此 <span class=\"exturl\" data-url=\"aHR0cHM6Ly90eXBvcmFpby5jbi8=\">Typora 官方中文站 </span>.</p>\n<p>我当然是推荐大家都用正版啦。不过价格是永久版￥89, 好在可以用在 3 台设备上。如果和你的两位同学 / 舍友均摊一下，每人就只要￥30, 和一张游戏月卡差不多.</p>\n<p>至于盗版以及破解方法<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub25seTQud29yay9ibG9nLz9pZD0zNzk=\">在此随便找一种改注册表时间方法的</span><s>不介绍 (还挺多的其实)</s>.</p>\n<p><s>还有一种免费白嫖的方法就是安装测试版 / Beta 版。官网有历史版本的下载链接 <span class=\"exturl\" data-url=\"aHR0cHM6Ly90eXBvcmFpby5jbi93aW5kb3dzL2Rldl9yZWxlYXNlLmh0bWw=\">Typora 历史版本下载页</span></s></p>\n<p>白嫖 Beta 版已经寄了，要么支持正版要么去学习一下破解方法吧 (还是忍不住啦，看上面的链接👆)</p>\n<h3 id=\"vs-code\"><a class=\"markdownIt-Anchor\" href=\"#vs-code\">#</a> VS Code</h3>\n<p>这是微软家的开源文本编辑器，理论上来说所有代码，语言，都可以用 VS Code 来写，同样是非常的简洁好用。在下载插件 <strong>Markdown All in One</strong> 后对 Markdown 的基础支持也是非常的好。若在 VS Code 下载 Markdown 各种附加扩展，就能获得比 Typora 更加丰富的扩展语法与操作.</p>\n<h3 id=\"其他\"><a class=\"markdownIt-Anchor\" href=\"#其他\">#</a> 其他</h3>\n<p>大部分 IDE, 像 Jetbrain 的全家桶里应该每一款，都支持 Markdown 语法，在此不多赘述.</p>\n<p>本文档主要使用 Typora 进行演示，同时会介绍许多 Typora 所包含的扩展语法.</p>\n<h2 id=\"基础教程\"><a class=\"markdownIt-Anchor\" href=\"#基础教程\">#</a> 🍭 基础教程</h2>\n<p>当有多种标记方法时我会倾向其中一种.</p>\n<p>标题有  <code>*</code>  表示该为扩展语法，仅在 Typora 或 添加了扩展的 VS Code <strong>本地生效</strong>，在大多数平台上<strong>并不认可</strong>.</p>\n<h3 id=\"0-写-markdown-的第零步\"><a class=\"markdownIt-Anchor\" href=\"#0-写-markdown-的第零步\">#</a> 0. 写 Markdown 的第零步</h3>\n<p>我们写文本的时候大多写的是中文，可是输入法在输中文时使用的标点为全角标点，如  <code>，。？！（）【】：；“”</code> . 这些标点是不被 Markdown 所认可的，也是无法转义的.</p>\n<p>我建议大家写 Markdown 的时候都用半角标点，即英文标点，如  <code>,.?!()[]:;&quot;&quot;</code> . 且每个半角标点在文本使用时加上后置空格，符合英文标点的书写规范，也更加美观.</p>\n<p>以微软自带输入法举例，在使用中文输入法时按下  <code>Ctrl</code>  +  <code>.(这是个句号)</code> , 切换标点的全角与半角。这样即可中文输入 + 半角标点.</p>\n<h3 id=\"1-标题-数个-空格-前置\"><a class=\"markdownIt-Anchor\" href=\"#1-标题-数个-空格-前置\">#</a> 1. 标题 [数个 “#” + 空格 前置]</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 一级标题</span><br><span class=\"line\">## 二级标题</span><br><span class=\"line\">### 三级标题</span><br><span class=\"line\">#### 四级标题</span><br><span class=\"line\">##### 五级标题</span><br><span class=\"line\">###### 六级标题</span><br></pre></td></tr></table></figure>\n<p>标题会在目录与大纲分级显示，可以跳转.</p>\n<p>在 Typora 中建议开启  <code>严格模式</code> ，即不应为  <code>#标题</code> ，应为  <code># 标题</code> .</p>\n<p>应该要手动补上空格，使得 Markdown 语法在其他文本编辑器上兼容.</p>\n<h3 id=\"2-强调-用-或-__-包围\"><a class=\"markdownIt-Anchor\" href=\"#2-强调-用-或-__-包围\">#</a> 2. 强调 [用 “**” 或 “__” 包围]</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">**欢迎报考南京大学!** (我喜欢用这种)</span><br><span class=\"line\">__欢迎报考南京大学!__</span><br></pre></td></tr></table></figure>\n<p>或者选中想要强调的文字按下  <code>Ctrl</code>  +  <code>B</code> .</p>\n<p>E.G.</p>\n<p><strong>欢迎报考南京大学！</strong></p>\n<h3 id=\"3-斜体-用-或-_-包围\"><a class=\"markdownIt-Anchor\" href=\"#3-斜体-用-或-_-包围\">#</a> 3. 斜体 [用 “*” 或 “_” 包围]</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*欢迎大佬来浇浇我各种知识* (我喜欢用这种)</span><br><span class=\"line\">_欢迎大佬来浇浇我各种知识_</span><br></pre></td></tr></table></figure>\n<p>或者选中想要强调的文字按下  <code>Ctrl</code>  +  <code>I</code> .</p>\n<p>E.G.</p>\n<p><em>欢迎大佬来浇浇我各种知识</em></p>\n<p>(P.S. <em><strong>斜体并强调</strong></em> [用 “***” 或 “___” 包围])</p>\n<h3 id=\"4-删除线-用-~~-包围\"><a class=\"markdownIt-Anchor\" href=\"#4-删除线-用-~~-包围\">#</a> 4. 删除线 [用 “~~” 包围]</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~~我宣布个事儿, 我是Sabiyary!~~</span><br></pre></td></tr></table></figure>\n<p>E.G.</p>\n<p><s>我宣布个事儿，我是 Sabiyary!</s></p>\n<h3 id=\"5-高亮-用-包围\"><a class=\"markdownIt-Anchor\" href=\"#5-高亮-用-包围\">#</a> 5. * 高亮 [用 “==” 包围]</h3>\n<p><strong>(注意：此为扩展语法)</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">==我喜欢黄色, 也喜欢绿色==</span><br></pre></td></tr></table></figure>\n<p>E.G.</p>\n<p><mark>我喜欢黄色，也喜欢绿色</mark></p>\n<h3 id=\"6-代码-用-包围\"><a class=\"markdownIt-Anchor\" href=\"#6-代码-用-包围\">#</a> 6. 代码 [用 “`” 包围]</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">`sudo rm -rf /*`</span><br></pre></td></tr></table></figure>\n<p>E.G.</p>\n<p><code>sudo rm -rf /*</code>  (没事别乱敲这个！)</p>\n<p><s>“请输入管理员密码: (闪烁的光标)”</s></p>\n<h3 id=\"7-代码块-按三个-并敲回车\"><a class=\"markdownIt-Anchor\" href=\"#7-代码块-按三个-并敲回车\">#</a> 7. 代码块 [按三个 “`” 并敲回车]</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">```</span><br><span class=\"line\"><span class=\"comment\">// 这里就可以开始输入你要的代码了</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">mian</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    print（“Hello, world!\\n<span class=\"string\">&quot;）;</span></span><br><span class=\"line\"><span class=\"string\">    retrun O;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">``` // (这三个&quot;</span>`<span class=\"string\">&quot;文本编辑器会帮你自动补全 一般不用手动输)</span></span><br></pre></td></tr></table></figure>\n<p>(我之前都是用这个来展示各种语法的，应该不用举例了吧)</p>\n<p>要想显示行数的话，一般要在 Typora 的设置里勾上这个显示行数的选项.</p>\n<p>代码块里可以选择语言，其会根据语言来自动高亮各个语句。在选择语言后， <code>```</code>  会变为  <code>````</code>  +  <code>对应语言</code> .</p>\n<h3 id=\"8-引用-空格-前置\"><a class=\"markdownIt-Anchor\" href=\"#8-引用-空格-前置\">#</a> 8. 引用 [&quot;&gt;&quot; + 空格 前置]</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; 24岁, 是学生.</span><br><span class=\"line\">&gt; &gt; 学生特有的无处不在(恼)</span><br></pre></td></tr></table></figure>\n<p>引用是可以嵌套的！</p>\n<p>E.G.</p>\n<blockquote>\n<p>24 岁，是学生.</p>\n<blockquote>\n<p>学生特有的无处不在 (恼)</p>\n</blockquote>\n</blockquote>\n<h3 id=\"9-无序列表-或-空格-前置\"><a class=\"markdownIt-Anchor\" href=\"#9-无序列表-或-空格-前置\">#</a> 9. 无序列表 [&quot;-&quot; 或  “+” + 空格 前置]</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 一颗是枣树 (我喜欢用这种)</span><br><span class=\"line\">+ 另一颗还是枣树</span><br><span class=\"line\">* (其实这种也可以, 不过由于在 Typora 中很难单个输入, 故不常用)</span><br></pre></td></tr></table></figure>\n<p>三种前置符都可以，敲回车会自动补全，可在 Typora 设置中调整补全的符号，敲回车后按下  <code>Tab</code>  会缩进一级.</p>\n<p>E.G.</p>\n<ul>\n<li>一颗是枣树</li>\n<li>另一颗还是枣树</li>\n</ul>\n<h3 id=\"10-有序列表-数字-空格-前置\"><a class=\"markdownIt-Anchor\" href=\"#10-有序列表-数字-空格-前置\">#</a> 10. 有序列表 [数字 + “.” + 空格 前置]</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">我来这里就为了三件事:</span><br><span class=\"line\">1. 公平</span><br><span class=\"line\">2. 公平</span><br><span class=\"line\">3. 还是tm的公平!</span><br></pre></td></tr></table></figure>\n<p>敲回车会自动补全，敲回车后按下  <code>Tab</code>  会缩进一级.</p>\n<p>E.G.</p>\n<p>我来这里就为了三件事:</p>\n<ol>\n<li>\n<p>公平</p>\n</li>\n<li>\n<p>公平</p>\n</li>\n<li>\n<p>还是 tm 的公平！</p>\n</li>\n</ol>\n<h3 id=\"11-上标-用-包围\"><a class=\"markdownIt-Anchor\" href=\"#11-上标-用-包围\">#</a> 11. * 上标 [用 “^” 包围]</h3>\n<p><strong>(注意：此为扩展语法)</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C语言中int的上限是 2^31^ - 1 = 2147483647</span><br></pre></td></tr></table></figure>\n<p>E.G.</p>\n<p>C 语言中  <code>int</code>  的上限是 2<sup>31</sup> - 1 = 2147483647</p>\n<h3 id=\"12-下标-用-~-包围\"><a class=\"markdownIt-Anchor\" href=\"#12-下标-用-~-包围\">#</a> 12. * 下标 [用 “~” 包围]</h3>\n<p><strong>(注意：此为扩展语法)</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">H~2~O 是剧毒的!</span><br></pre></td></tr></table></figure>\n<p>E.G.</p>\n<p>H<sub>2</sub>O 是剧毒的！</p>\n<h3 id=\"13-注释-后置\"><a class=\"markdownIt-Anchor\" href=\"#13-注释-后置\">#</a> 13. * 注释 [&quot;[^]&quot; 后置]</h3>\n<p><strong>(注意：此为扩展语法)</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; 今日我们相聚于此, 是为了学习 Markdown 的使用, 它的教程对于全体「观众」而言, 值得足足两个硬币的支持鼓励![^1]</span><br><span class=\"line\"></span><br><span class=\"line\">[^1]: 沃兹·基·硕德 改编自「公鸡」普契涅拉.</span><br></pre></td></tr></table></figure>\n<p>需要在文末写上注释对应的内容</p>\n<p>E.G.</p>\n<blockquote>\n<p>今日我们相聚于此，是为了学习 Markdown 的使用，它的教程对于全体「观众」而言，值得足足两个硬币的支持鼓励！<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup></p>\n</blockquote>\n<h3 id=\"14-链接-常用-分别包围文本与链接\"><a class=\"markdownIt-Anchor\" href=\"#14-链接-常用-分别包围文本与链接\">#</a> 14. 链接 [常用 “[]” + “( )” 分别包围文本与链接]</h3>\n<p><strong>(注意：文内跳转为扩展用法)</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[来看看我贫瘠的仓库罢](https://github.com/Sakiyary)</span><br><span class=\"line\">[基础教程: 12. 下标](#12. 下标 [用 &quot;~&quot; 包围])</span><br></pre></td></tr></table></figure>\n<p>支持网页链接与文内跳转，按住  <code>Ctrl</code>  并  <code>单击鼠标左键</code>  即可跳转.</p>\n<p>E.G.</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1Nha2l5YXJ5\">来看看我贫瘠的仓库罢</span></p>\n<p>[基础教程: 12. 下标](#12. 下标 [用 “~” 包围])</p>\n<h3 id=\"15-任务列表-空格-前置\"><a class=\"markdownIt-Anchor\" href=\"#15-任务列表-空格-前置\">#</a> 15. 任务列表 [&quot;- []&quot; + 空格 前置]</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TodoList:</span><br><span class=\"line\">- [ ] 刷B站</span><br><span class=\"line\">- [ ] 写代码</span><br><span class=\"line\">- [x] 起床</span><br></pre></td></tr></table></figure>\n<p>用  <code>x</code>  代替  <code>[ ]</code>  中的空格来勾选任务列表。在 Typora 中可以直接用鼠标左键单击勾选框.</p>\n<p>E.G. TodoList:</p>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\"><label for=\"cbx_0\"> 刷 B 站</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" disabled=\"true\"><label for=\"cbx_1\"> 写代码</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" checked=\"true\" disabled=\"true\"><label for=\"cbx_2\"> 起床</label></li>\n</ul>\n<h3 id=\"16-表格-用-绘制表格边框\"><a class=\"markdownIt-Anchor\" href=\"#16-表格-用-绘制表格边框\">#</a> 16. 表格 [用 “|” 绘制表格边框]</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">| 学号 | 姓名  | 年龄 |</span><br><span class=\"line\">| :--- | :---: | ---: | (引号的位置代表着 左对齐, 居中, 右对齐)</span><br><span class=\"line\">|114514|田所|24|</span><br><span class=\"line\">|1919810|浩三|25|</span><br></pre></td></tr></table></figure>\n<p>第一行为表头，并由第二行分割线决定对齐方式与长度，第三行及之后即表格数据</p>\n<p>E.G.</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">学号</th>\n<th style=\"text-align:center\">姓名</th>\n<th style=\"text-align:right\">年龄</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">114514</td>\n<td style=\"text-align:center\">田所</td>\n<td style=\"text-align:right\">24</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">1919810</td>\n<td style=\"text-align:center\">浩三</td>\n<td style=\"text-align:right\">25</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"17-图片-直接拖进来或者复制粘贴\"><a class=\"markdownIt-Anchor\" href=\"#17-图片-直接拖进来或者复制粘贴\">#</a> 17. 图片 [直接拖进来或者复制粘贴]</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![图片](图片的位置)</span><br></pre></td></tr></table></figure>\n<p>我还是会选择拖进来或者复制粘贴啦～在 Typora 的设置里也可以改图片的储存方式.</p>\n<h3 id=\"18-分割线-按三个-或-或-_-并敲回车\"><a class=\"markdownIt-Anchor\" href=\"#18-分割线-按三个-或-或-_-并敲回车\">#</a> 18. 分割线 [按三个 “*” 或 “-” 或 “_” 并敲回车]</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">***</span><br><span class=\"line\">--- (我喜欢用这种)</span><br><span class=\"line\">___</span><br><span class=\"line\">// (其实按三个及以上都可以)</span><br></pre></td></tr></table></figure>\n<p>由于  <code>*</code>  与  <code>_</code>  均会自动补全，所以我觉得  <code>-</code>  最为方便.</p>\n<p>E.G.</p>\n<hr>\n<hr>\n<hr>\n<h3 id=\"19-emoji表情-前置\"><a class=\"markdownIt-Anchor\" href=\"#19-emoji表情-前置\">#</a> 19. Emoji 表情 [&quot;:&quot; 前置]</h3>\n<p><strong>(注意：英文输入为扩展语法)</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:sweat_smile: </span><br><span class=\"line\">:drooling_face:</span><br><span class=\"line\">:clown_face:</span><br><span class=\"line\">// (敲回车或者鼠标点击, 后置的&quot;:&quot;一般不需要手动输)</span><br></pre></td></tr></table></figure>\n<p>这个功能唯一的要求就是英语水平要高，或者大概记得各个 Emoji 的英文名.</p>\n<p>E.G.</p>\n<p>😅<br>\n🤤<br>\n🤡</p>\n<p>对于其余普通的 Markdown 文本编辑器，可以直接将 Emoji 表情复制进来，这是直接<strong>硬编码</strong>的 (<s>刻进 DNA 里</s>)</p>\n<p>E.G.</p>\n<p>😅🤤🤡</p>\n<p>用好这个功能可以让你的文本非常的可爱！<s>太抽象了</s></p>\n<p>这里分享一个可以复制<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbW9qaXBlZGlhLm9yZy9hcHBsZS8=\">全 Emoji 的网站</span>，非常好用！我之前的 C 语言大作业也是从这里下载的资源！</p>\n<h2 id=\"进阶教程\"><a class=\"markdownIt-Anchor\" href=\"#进阶教程\">#</a> 🔥 进阶教程</h2>\n<h3 id=\"1-目录-自动生成\"><a class=\"markdownIt-Anchor\" href=\"#1-目录-自动生成\">#</a> 1. 目录 [自动生成]</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[TOC] (此为 Typora 特有的, 如本文档开头)</span><br></pre></td></tr></table></figure>\n<p>若使用 VS Code 搭配 Markdown All in One 扩展，可在 VS Code 的 <code>命令面板</code>  (即 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vZG9jcy9nZXRzdGFydGVkL3VzZXJpbnRlcmZhY2UjX2NvbW1hbmQtcGFsZXR0ZQ==\">VS Code Command Palette</span>) 输入  <code>Create Table of Contents</code>  自动生成目录，且可在扩展设置中细调目录参数.</p>\n<h3 id=\"2-内联-html-代码-用-包围\"><a class=\"markdownIt-Anchor\" href=\"#2-内联-html-代码-用-包围\">#</a> 2. 内联 HTML 代码 [用 “&lt;&gt; &lt;/&gt;” 包围]</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div style=&quot;text-align:center&quot;&gt;</span><br><span class=\"line\">  &lt;font style=&quot;color:red&quot;&gt;我不会 HTML 呜呜呜... 浇浇我&lt;/font&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;center&gt;简单的文字居中也可以这样&lt;/center&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;u&gt;我差点忘了还有下划线这东西...&lt;/u&gt;</span><br></pre></td></tr></table></figure>\n<p>只要你会写，你完全可以把 Markdown 当作 <strong>HTML</strong> 来写.</p>\n<p>同时， <code>.md</code>  文件可以直接导出成一个网页.</p>\n<p>下划线可以选中想要下划的文字按下  <code>Ctrl</code>  +  <code>U</code> .</p>\n<p>E.G.</p>\n<div style=\"text-align:center\">\n  <font style=\"color:red\">我不会 HTML 呜呜呜... 浇浇我</font>\n</div>\n<center>简单的文字居中也可以这样</center>\n<p><u>我差点忘了还有下划线这东西…</u></p>\n<h3 id=\"3-内联-latex-公式-用-包围\"><a class=\"markdownIt-Anchor\" href=\"#3-内联-latex-公式-用-包围\">#</a> 3. 内联 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>LaTeX</mtext></mrow><annotation encoding=\"application/x-tex\">\\LaTeX</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.89883em;vertical-align:-0.2155em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">L</span><span class=\"mspace\" style=\"margin-right:-0.36em;\"></span><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.68333em;\"><span style=\"top:-2.904999em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord\"><span class=\"mord textrm mtight sizing reset-size6 size3\">A</span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:-0.15em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">T</span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.46782999999999997em;\"><span style=\"top:-2.7845em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord textrm\">E</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2155em;\"><span></span></span></span></span><span class=\"mspace\" style=\"margin-right:-0.125em;\"></span><span class=\"mord textrm\">X</span></span></span></span></span></span> 公式 [用 “$” 包围]</h3>\n<p><strong>(注意：部分编译器会不识别部分符号)</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$\\LaTeX$ 是最好用的论文排版语言! 不信你看!</span><br><span class=\"line\"></span><br><span class=\"line\">$a^n+b^n=c^n$</span><br></pre></td></tr></table></figure>\n<p>用  <code>$</code>  包围为单条公式，按下两个  <code>$</code>  并敲回车即生成公式块.</p>\n<p>E.G.</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>LaTeX</mtext></mrow><annotation encoding=\"application/x-tex\">\\LaTeX</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.89883em;vertical-align:-0.2155em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">L</span><span class=\"mspace\" style=\"margin-right:-0.36em;\"></span><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.68333em;\"><span style=\"top:-2.904999em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord\"><span class=\"mord textrm mtight sizing reset-size6 size3\">A</span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:-0.15em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">T</span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.46782999999999997em;\"><span style=\"top:-2.7845em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord textrm\">E</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2155em;\"><span></span></span></span></span><span class=\"mspace\" style=\"margin-right:-0.125em;\"></span><span class=\"mord textrm\">X</span></span></span></span></span></span> 是最好用的论文排版语言！不信你看！</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>a</mi><mi>n</mi></msup><mo>+</mo><msup><mi>b</mi><mi>n</mi></msup><mo>=</mo><msup><mi>c</mi><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">a^n+b^n=c^n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.747722em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.664392em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span></p>\n<h3 id=\"4-网络图床\"><a class=\"markdownIt-Anchor\" href=\"#4-网络图床\">#</a> 4. * 网络图床</h3>\n<p>(这是学长给我的网络图床教程，我并未实践过…)</p>\n<p>分享一个 Typora 搭配腾讯云 COS / 阿里云 OSS 图床的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2d1b19yaWRnZXBvbGUvYXJ0aWNsZS9kZXRhaWxzLzEwODI1NzI3Nw==\">例子</span>。新用户免费试用 6 个月，另外还可选择七牛云或者路过图床.</p>\n<h3 id=\"5-typora-的常用快捷键\"><a class=\"markdownIt-Anchor\" href=\"#5-typora-的常用快捷键\">#</a> 5. *Typora 的常用快捷键</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">按键</th>\n<th style=\"text-align:center\">效果</th>\n<th style=\"text-align:center\">按键</th>\n<th style=\"text-align:center\">效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>Ctrl</code>  +  <code>D</code></td>\n<td style=\"text-align:center\">选中当前词</td>\n<td style=\"text-align:center\"><code>Ctrl</code>  +  <code>L</code></td>\n<td style=\"text-align:center\">选中当前句 / 行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>Ctrl</code>  +  <code>E</code></td>\n<td style=\"text-align:center\">选中当前区块</td>\n<td style=\"text-align:center\"><code>Ctrl</code>  +  <code>F</code></td>\n<td style=\"text-align:center\">搜索当前选中</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>Ctrl</code>  +  <code>B</code></td>\n<td style=\"text-align:center\">加粗当前选中</td>\n<td style=\"text-align:center\"><code>Ctrl</code>  +  <code>H</code></td>\n<td style=\"text-align:center\">替换当前选中</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>Ctrl</code>  +  <code>I</code></td>\n<td style=\"text-align:center\">倾斜当前选中</td>\n<td style=\"text-align:center\"><code>Ctrl</code>  +  <code>U</code></td>\n<td style=\"text-align:center\">下划当前选中</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>Ctrl</code>  +  <code>K</code></td>\n<td style=\"text-align:center\">将当前选中生成链接</td>\n<td style=\"text-align:center\"><code>Ctrl</code>  +  <code>J</code></td>\n<td style=\"text-align:center\">滚动屏幕将选中滚至顶部</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>Ctrl</code>  +  <code>W</code></td>\n<td style=\"text-align:center\">关闭当前窗口</td>\n<td style=\"text-align:center\"><code>Ctrl</code>  +  <code>N</code></td>\n<td style=\"text-align:center\">打开新窗口</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>Ctrl</code>  +  <code>O</code></td>\n<td style=\"text-align:center\">打开文件</td>\n<td style=\"text-align:center\"><code>Ctrl</code>  +  <code>P</code></td>\n<td style=\"text-align:center\">搜索文件并打开</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>Ctrl</code>  +  <code>回车</code></td>\n<td style=\"text-align:center\">表格下方插入行</td>\n<td style=\"text-align:center\"><code>Ctrl</code>  +  <code>,</code></td>\n<td style=\"text-align:center\">打开偏好设置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>Ctrl</code>  +  <code>.</code></td>\n<td style=\"text-align:center\">切换全角 / 半角标点</td>\n<td style=\"text-align:center\"><code>Ctrl</code>  +  <code>/</code></td>\n<td style=\"text-align:center\">切换正常 / 源代码视图</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>Ctrl</code>  +  <code>Shift</code>  +  <code>-</code></td>\n<td style=\"text-align:center\">缩小视图缩放</td>\n<td style=\"text-align:center\"><code>Ctrl</code>  +  <code>Shift</code>  +  <code>+</code></td>\n<td style=\"text-align:center\">放大视图缩放</td>\n</tr>\n</tbody>\n</table>\n<p>还有一些不常用的 / 三键的快捷键不在此列出.</p>\n<h3 id=\"6-typora-的主题样式与检查元素\"><a class=\"markdownIt-Anchor\" href=\"#6-typora-的主题样式与检查元素\">#</a> 6. *Typora 的主题样式与检查元素</h3>\n<p>Markdown 在编译后约等于 HTML. 而 Typora 的正常视图就是编译后的 Markdown, 故 Typora 的主题样式本质就是 CSS 文件.</p>\n<p>可以下载各种好看的主题给 Typora 换上，同时也可以自己调整对应的 CSS 文件，或者自己手搓.</p>\n<p>在 Typora 设置中开启  <code>调试模式</code>  后即可在正常视图右击打开  <code>检查元素</code> ，在其中就可以完全将 Markdown 文件当成 HTML 来编辑.</p>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 💯 总结</h2>\n<p>至此，<strong>Markdown + Typora / VSCode</strong> 的手册教程也告一段落.</p>\n<p>不知你看完这么长的教程 / 手册，是否能体会到 Markdown 的精妙简洁之处呢？</p>\n<p>其实 Markdown 只是标记语言的最开始，我的感受是会了 Markdown 之后对于理解 HTML 也有帮助，对于用 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>LaTeX</mtext></mrow><annotation encoding=\"application/x-tex\">\\LaTeX</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.89883em;vertical-align:-0.2155em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">L</span><span class=\"mspace\" style=\"margin-right:-0.36em;\"></span><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.68333em;\"><span style=\"top:-2.904999em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord\"><span class=\"mord textrm mtight sizing reset-size6 size3\">A</span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:-0.15em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">T</span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.46782999999999997em;\"><span style=\"top:-2.7845em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord textrm\">E</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2155em;\"><span></span></span></span></span><span class=\"mspace\" style=\"margin-right:-0.125em;\"></span><span class=\"mord textrm\">X</span></span></span></span></span></span> 来写论文也有帮助。标记语言正是为了摆脱 Word 那种虽然 &quot;所见即所得&quot;, 但又过于花哨浮华，很差的兼容性与闭源的编码的缺陷。当你能掌握这样的 &quot;所写即所得&quot; 时，你肯定会感受到用 Markdown 这类语言来处理文本的妙处！</p>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>沃兹・基・硕德 改编自「公鸡」普契涅拉. <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
            "tags": [
                "mark"
            ]
        },
        {
            "id": "http://yoursite.com/2022/10/29/hello-world/",
            "url": "http://yoursite.com/2022/10/29/hello-world/",
            "title": "Hello World",
            "date_published": "2022-10-29T07:58:34.023Z",
            "content_html": "<p>从 Wordpress 切换到 Hexo 的第一篇文章，以此开始记录从大一开始的菜鸟学习计算机之路 LMAO.</p>\n<p>由于以后不会特别倾向于前端开发，而且发现 Hexo 和 Hugo 都适合 markdown 编写，便选择了 Hexo, 并且使用了琉璃姐姐的 Shoka 主题 (好看捏，虽然还有些 bug).</p>\n<p>后面首先会推出计算机都看得懂的纯小白建设个人 Blog 的帖子，并且等能力上来了会提供 Python 的全栈开发学习历程以及 Leetcode 的解题等内容，也会分享点个人的闲聊.</p>\n",
            "tags": []
        }
    ]
}